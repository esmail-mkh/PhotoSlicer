name: Build EXE & Create Release

on:
  workflow_dispatch:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    steps:
      # Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # نصب Python 3.11
      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # نصب وابستگی‌ها
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
          pip install pyinstaller

      # استخراج نسخه از فایل main.py
      - name: Extract Version
        id: get_version
        run: |
          $version = Select-String -Pattern 'VERSION\s*=\s*"(.*?)"' -Path "./main.py" | ForEach-Object { $_.Matches.Groups[1].Value }
          echo "version=$version" >> $GITHUB_STATE

      # ذخیره artifact برای ورژن
      - name: Save version as artifact
        run: |
          echo "${{ states.get_version.outputs.version }}" > ./version.txt
        uses: actions/upload-artifact@v4
        with:
          name: version
          path: ./version.txt

      # ساخت EXE با PyInstaller
      - name: Build with PyInstaller
        run: |
          pyinstaller --noconfirm --onefile --windowed --icon "./assets/icon.ico" --name "PhotoSlicer v${{ states.get_version.outputs.version }}" --add-data "engine.py;." --add-data "./assets;assets/" "./main.py"

      # ذخیره EXE به Artifact
      - name: Upload EXE to artifact
        uses: actions/upload-artifact@v4
        with:
          name: photo_slicer_build
          path: ./dist/

  release:
    needs: build
    runs-on: windows-latest
    steps:
      # دانلود artifact مربوط به ورژن
      - name: Download version artifact
        uses: actions/download-artifact@v4
        with:
          name: version
          path: ./version

      # خواندن نسخه از artifact
      - name: Read version from artifact
        id: read_version
        run: |
          $version = Get-Content -Path "./version/version.txt"
          echo "version=$version" >> $GITHUB_OUTPUT

      # ایجاد ریلیز در GitHub
      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: v${{ steps.read_version.outputs.version }}
          release_name: Release v${{ steps.read_version.outputs.version }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # دانلود فایل EXE از artifact
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: photo_slicer_build
          path: ./dist/

      # آپلود فایل EXE به ریلیز
      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./dist/PhotoSlicer.exe
          asset_name: PhotoSlicer-v${{ steps.read_version.outputs.version }}-windows-x64.exe
          asset_content_type: application/octet-stream
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
